<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
		<EnablePackageValidation>true</EnablePackageValidation>
        <TargetFramework>netstandard2.0</TargetFramework>
        <LangVersion>latest</LangVersion>
        <RootNamespace>DynatestSourceGenerator</RootNamespace>
        <Version>0.0.4.3</Version>
        <PackageId>$(AssemblyName)</PackageId>
        <Title>Dynatest Source Generator</Title>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<Authors>Benjamin Curovic</Authors>
        <Company>Dynatest</Company>
        <Product>Source Generator</Product>
        <Description>Dynatest Source Generator is a C# source generator that generates Data Transfer Objects (DTOs) from classes with a specific attribute. </Description>
        <PackAsTool>false</PackAsTool>
        <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<AnalysisLevel>latest-recommended</AnalysisLevel>
		<BuildOutputTargetFolder>analyzers</BuildOutputTargetFolder>
		<PackageReleaseNotes>
			Version 0.4.2

			Features
			One of the most significant improvements is that the Source Generator can now handle all types and collections, making it easier than ever to generate source code for a wide range of applications.

			In addition, the Source Generator now generates methods only when they are actually used in the application, resulting in more efficient code generation and reduced code bloat. This new functionality ensures that your code is leaner and more optimized than ever before.

			Overall, these enhancements make the Dynatest Source Generator an even more powerful and versatile tool for developers, helping them to create high-quality source code faster and more efficiently.
			
			Known Issues
			The inputs for the attributes are all strings, which can cause issues. We recommend verifying that the inputs for the attributes are valid before using them in your code.
			Thank you for using our software! If you encounter any issues or have any feedback, please do not hesitate to reach out to our support team.
		</PackageReleaseNotes>
		<Nullable>enable</Nullable>
	</PropertyGroup>
	

    <ItemGroup>
      <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
        <PrivateAssets>all</PrivateAssets>
        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.5.0" PrivateAssets="all" />
    </ItemGroup>
	<ItemGroup>
		<None Include="..\..\..\..\..\Downloads\Dynatest Source Generator.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
		<None Include="..\..\..\..\..\Downloads\dynatest-vector-logo-2022.png">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>


	<ItemGroup>
		<None Remove="bin\Debug\netstandard2.0\\DynatestSourceGenerator.dll" />
		<None Remove="bin\Release\netstandard2.0\\DynatestSourceGenerator.dll" />
	</ItemGroup>

	<ItemGroup>
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
		<None Include="$(OutputPath)\$(AssemblyName).Abstractions.dll" Pack="true" PackagePath="lib\netstandard2.0" Visible="true" />

	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\DynatestSourceGenerator.Abstractions\DynatestSourceGenerator.Abstractions.csproj" />
	</ItemGroup>

</Project>
